// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address[11..13], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    RAM4K(in=in, load=a, address=address[0..10], out=O1);
    RAM4K(in=in, load=b, address=address[0..10], out=O2);
    RAM4K(in=in, load=c, address=address[0..10], out=O3);
    RAM4K(in=in, load=d, address=address[0..10], out=O4);
    RAM4K(in=in, load=e, address=address[0..10], out=O5);
    RAM4K(in=in, load=f, address=address[0..10], out=O6);
    RAM4K(in=in, load=g, address=address[0..10], out=O7);
    RAM4K(in=in, load=h, address=address[0..10], out=O8);
    

    Mux8Way16(a=O1, b=O2, c=O3, d=O4, e=O5, f=O6, g=O7, h=O8, sel=address[11..13], out=out);
}